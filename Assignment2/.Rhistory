install.packages("writexl")
install.packages("tidyverse")
library(jsonlite)
library(tidyverse)
library(writexl)
library(readxl)
install.packages(c("brew", "bslib", "cachem", "callr", "commonmark", "cpp11", "crayon", "curl", "dbplyr", "devtools", "digest", "dtplyr", "evaluate", "fansi", "fastmap", "fontawesome", "fs", "gert", "gh", "highr", "htmltools", "htmlwidgets", "httpuv", "httr", "igraph", "imager", "jpeg", "knitr", "maptools", "markdown", "openssl", "packrat", "pkgbuild", "pkgdown", "pkgload", "plyr", "png", "processx", "ps", "raster", "Rcpp", "rgdal", "rgeos", "rmarkdown", "roxygen2", "rsconnect", "sass", "shiny", "sourcetools", "sp", "stringi", "sys", "terra", "testthat", "tinytex", "utf8", "whisker", "xfun", "yaml", "zip"))
install.packages("installr")
install.packages("writexl")
install.packages("tidyverse")
library(jsonlite)
library(tidyverse)
library(writexl)
library(readxl)
json_data <- fromJSON("shoebox-weights.json")
json_tibble <- as_tibble(json_data)
json_tibble <- as_tibble(json_data)
write_excel_csv(json_tibble, "output_file.csv")
df <- read_excel("output_file.csv")
df_grouped <- df %>%
group_by(ParentBuildingId)
df <- read_excel("output_file.csv")
write_excel_csv(json_tibble, "output_file.csv")
df <- read_excel("output_file.csv")
library(readxl)
df <- read_excel("output_file.csv")
write_excel_csv(json_tibble, "output_file.xlsx")
df <- read_excel("output_file.xlsx")
write_excel_csv(json_tibble, "output_file.xlsx")
df <- read_excel("output_file.xlsx")
df <- read_excel("output_file.xlsx", "for R")
df <- read_excel("output_file.xlsx", "for R")
library(readxl)
df <- read_excel("output_file.xlsx", "for R")
df <- read_excel("output_file.xlsx")
df <- read_excel("output_file.xlsx")
write_excel_csv(json_tibble, "output_file.csv")
df <- read_excel("output_file.xlsx")
df <- read.csv("output_file.csv")
df_grouped <- df %>%
df_grouped <- df %>%
group_by(ParentBuildingId)
newfile <- df %>%
group_by(ParentBuildingId) %>%
newfile
write_excel_csv(json_tibble, "output_file.csv")
df <- read.csv("output_file.csv")
df_grouped <- df %>%
group_by(ParentBuildingId)
df_summary <- df_grouped %>%
summarise(newidf = (ShoeboxPath))
newfile <- df %>%
group_by(ParentBuildingId) %>%
newfile
newfile <- df %>%
group_by(ParentBuildingId) %>%
print (newfile)
newfile <- df %>%
group_by(ParentBuildingId) %>%
print (newfile)
write_excel_csv(json_tibble, "output_file.csv")
df <- read.csv("output_file.csv")
df_grouped <- df %>%
group_by(ParentBuildingId)
df_summary <- df_grouped %>%
summarise(newidf = (ShoeboxPath))
newfile <- df %>%
group_by(ParentBuildingId) %>%
print (newfile)
df_grouped <- df %>%
group_by(ParentBuildingId)
print(df_grouped)
print(df_grouped)
write_csv(df_grouped, "output2_file.csv")
df_grouped <- df %>%
group_by(ParentBuildingId)
summarize(count = n())
df_grouped <- df %>%
group_by(ParentBuildingId)
summarize(count = n())
df_grouped <- df %>%
group_by(ParentBuildingId)
summarize (Totaidf= count.fields(ShoeboxPath),
count = n())
group_by(ParentBuildingId)
df <- read.csv("output_file.csv")
df_grouped <- df %>%
group_by(ParentBuildingId)
summarize (Totaidf= count(ShoeboxPath),
count = n())
df <- read.csv("output_file.csv")
df_grouped <- df %>%
group_by(ParentBuildingId)
summarize (Totaidf= sum(ShoeboxPath),
count = n())
write_excel_csv(json_tibble, "output_file.csv")
df <- read.csv("output_file.csv")
df_grouped <- df %>%
group_by(ParentBuildingId)
summarize (Totaidf= sum(ShoeboxPath),
count = n())
df_grouped <- df %>%
group_by(ParentBuildingId)
summarize (Totaidf= sum(ShoeboxPath),
dcount = n())
library(dplyr)
df_grouped <- df %>%
group_by(ParentBuildingId)
summarize(count = n())
json_data <- fromJSON("shoebox-weights.json")
json_tibble <- as_tibble(json_data)
json_tibble <- as_tibble(json_data)
write_excel_csv(json_tibble, "output_file.csv")
df <- read.csv("output_file.csv")
df_grouped <- df %>%
group_by(ParentBuildingId)
summarize (Totaidf= sum(ShoeboxPath),
dcount = n())
df <- read.csv("output_file.csv")
df_grouped <- df %>%
group_by(ParentBuildingId)
summarize (Totaidf= sum(ParentBuildingId),
dcount = n())
write_excel_csv(json_tibble, "output_file.csv")
df <- read.csv("output_file.csv")
df_grouped <- df %>%
group_by(ParentBuildingId)
summarize (Totaidf= sum(ShoeboxPath),
dcount = n())
write_excel_csv(json_tibble, "output_file.csv")
df <- read.csv("output_file.csv")
df_grouped <- df %>%
group_by(ParentBuildingId)
summarize (
dcount = n())
df <- read.csv("output_file.csv")
df_grouped <- df %>%
group_by(ParentBuildingId)
summarize (
dcount = n())
df <- read.csv("output_file.csv")
df_grouped <- df %>%
group_by(ParentBuildingId)%>%
summarize (count = n())
print(df_grouped)
write_csv(df_grouped, "output2_file.csv")
import pandas as pd
install.packages("pandas")
import pandas as pd
library(tidyverse)
df <- read.csv("D:\Sedi'sFiles\prototype\experiment for idf\experimentb_for idf\mytrees.csv")
library(tidyverse)
df <- read.csv("C:\Users\ghiasi\Documents\GitHub\LA588_Sedi\R_EX\tree_2.csv")
install.packages("installr")
install.packages("sf")
install.packages("tidyverse")
install.packages("dplyr")
install.packages("readxl")
library(ggplot2)
library(dplyr)
library(sf)
install.packages("dplyr")
install.packages("tidyverse")
install.packages("readxl")
df <- read.csv("tree_2.csv")
df <- read.csv("tree_2.csv")
ggplot(df, aes(y=`height`)) +
geom_boxplot() +
ylab("Height (m)") +
ggtitle("Box Plot of Tree Heights")
df <- read.csv("tree_2.csv")
ggplot(df, aes(x=`number`, y=`height`)) +
geom_boxplot() +
xlab("Trees") +
ylab("Height (m)") +
ggtitle("Box Plot of Tree Heights")
ggplot(count_data, aes(x = cell, y = count)) +
geom_bar(stat = "identity", fill = "blue") +
labs(x = "Cell", y
ggplot(count_data, aes(x = cell, y = count)) +
#Sedi Ghiasi
#Assignment2
#LA 588 spring 2023
# ----Dataset one------------------------------
install.packages("installr")
install.packages("sf")
install.packages("tidyverse")
install.packages("dplyr")
install.packages("readxl")
library(ggplot2)
library(dplyr)
library(sf)
library(readxl)
#Importing excel file####
datasets <- read.csv("sample.csv")
?count.fields()
#here i am counting the cells has two conditions: greening_category == "cover" & Point_Count==0####
number_of_trees_79 <- datasets%>%
count(greening_category == "cover" & Point_Count==0)
print(number_of_trees_79)
number_of_trees_80 <- datasets%>%
count(greening_category == "no tree" & Point_Count==0)
print(number_of_trees_80)
#here i did a filter to separate cell =79####
result_cell79 <- datasets %>%
filter(greening_category
== "no tree" & cell == "79")
print(result_cell79)
result_cell80 <- datasets %>%
filter(greening_category
== "no tree" & cell == "80")
print(result_cell80)
result_cell81 <- datasets %>%
filter(greening_category
== "no tree" & cell == "81")
print(result_cell81)
# Combine the data frames
result_all <- bind_rows(
result_cell79 %>% mutate(cell = "79"),
result_cell80 %>% mutate(cell = "80"),
result_cell81 %>% mutate(cell = "81")
)
# count the number of rows in each data frame
count_cell79 <- nrow(result_cell79)
count_cell80 <- nrow(result_cell80)
count_cell81 <- nrow(result_cell81)
# create a data frame with the counts
count_data <- data.frame(cell = c("79", "80", "81"), count = c(count_cell79, count_cell80, count_cell81))
# create a bar chart
ggplot(count_data, aes(x = cell, y = count)) +
geom_bar(stat = "identity", fill = "blue") +
labs(x = "Cell", y = "Count", title = "Number of Observations by Cell") +
theme_classic()
install.packages("readxl")
install.packages("sf")
install.packages("tidyverse")
install.packages("dplyr")
setwd("C:/Users/ghiasi/Documents/GitHub/LA588_Sedi/Assignment 2")
#Importing excel file####
datasets <- read.csv("sample.csv")
?count.fields()
number_of_trees_79 <- datasets%>%
count(greening_category == "cover" & Point_Count==0)
print(number_of_trees_79)
number_of_trees_80 <- datasets%>%
count(greening_category == "no tree" & Point_Count==0)
print(number_of_trees_80)
result_cell79 <- datasets %>%
filter(greening_category
== "no tree" & cell == "79")
print(result_cell79)
result_cell80 <- datasets %>%
filter(greening_category
== "no tree" & cell == "80")
print(result_cell80)
result_cell81 <- datasets %>%
filter(greening_category
== "no tree" & cell == "81")
print(result_cell81)
# Combine the data frames
result_all <- bind_rows(
result_cell79 %>% mutate(cell = "79"),
result_cell80 %>% mutate(cell = "80"),
result_cell81 %>% mutate(cell = "81")
)
result_all <- bind_rows(
result_cell79 %>% mutate(cell = "79"),
result_cell80 %>% mutate(cell = "80"),
result_cell81 %>% mutate(cell = "81"))
count_cell79 <- nrow(result_cell79)
count_cell80 <- nrow(result_cell80)
count_cell81 <- nrow(result_cell81)
count_data <- data.frame(cell = c("79", "80", "81"), count = c(count_cell79, count_cell80, count_cell81))
# create a bar chart
ggplot(count_data, aes(x = cell, y = count)) +
geom_bar(stat = "identity", fill = "blue") +
labs(x = "Cell", y = "Count", title = "Number of Observations by Cell") +
theme_classic()
ggplot(count_data, aes(x = cell, y = count)) +
geom_bar(stat = "identity", fill = "blue") +
labs(x = "Cell", y = "Count", title = "Number of Observations by Cell") +
theme_classic((hjust = 0.5))
# create a bar chart
ggplot(count_data, aes(x = cell, y = count)) +
geom_bar(stat = "identity", fill = "blue") +
labs(x = "Cell", y = "Count", title = "Number of Observations by Cell") +
theme_classic((hjust = 0.05))
ggplot(count_data, aes(x = cell, y = count)) +
geom_bar(stat = "identity", fill = "blue") +
labs(x = "Cell", y = "Count", title = "Number of Observations by Cell") +
theme(plot.title = element_text(hjust = 0.5))
dataset2 <- read.csv("tree_2.csv")
dataset2 <- read.csv("tree_2.csv")
# Group the data by height and count the number of buildings in each group
data_grouped <- dataset2 %>% group_by(height)%>% summarise(count = n())
dataset2_summary <- data_grouped %>% summarise(mean_value = mean(height))
# Creating a bar plot with height on x-axis and count on y-axise####
ggplot(data_grouped, aes(x = height, y = count)) +
geom_bar(stat = "identity") +
labs(title = "Number of Buildings by Height", x = "Height", y = "Number of Buildings")
json_data <- fromJSON("shoebox-weights.json")
json_tibble <- as_tibble(json_data)
json_tibble <- as_tibble(json_data)
write_excel_csv(json_tibble, "output_file.csv")
df <- read.csv("output_file.csv")
df_grouped <- df %>%
group_by(ParentBuildingId)%>%
summarize (count = n())
print(df_grouped) write_csv(df_grouped, "output2_file.csv")
library(jsonlite)
library(jsonlite)
library(writexl)
json_data <- fromJSON("shoebox-weights.json")
json_tibble <- as_tibble(json_data)
json_tibble <- as_tibble(json_data)
write_excel_csv(json_tibble, "output_file.csv")
df <- read.csv("output_file.csv")
df_grouped <- df %>%
group_by(ParentBuildingId)%>%
summarize (count = n())
print(df_grouped) write_csv(df_grouped, "output2_file.csv")
#Sedi Ghiasi
#Assignment2
#LA 588 spring 2023
# ----Dataset one------------------------------
install.packages("installr")
install.packages("sf")
install.packages("tidyverse")
install.packages("dplyr")
install.packages("readxl")
library(ggplot2)
library(dplyr)
library(sf)
library(readxl)
library(jsonlite)
library(writexl)
#Importing excel file####
datasets <- read.csv("sample.csv")
?count.fields()
#here i am counting the cells has two conditions: greening_category == "cover" & Point_Count==0####
number_of_trees_79 <- datasets%>%
count(greening_category == "cover" & Point_Count==0)
print(number_of_trees_79)
number_of_trees_80 <- datasets%>%
count(greening_category == "no tree" & Point_Count==0)
print(number_of_trees_80)
#here i did a filter to separate cell =79####
result_cell79 <- datasets %>%
filter(greening_category
== "no tree" & cell == "79")
print(result_cell79)
result_cell80 <- datasets %>%
filter(greening_category
== "no tree" & cell == "80")
print(result_cell80)
result_cell81 <- datasets %>%
filter(greening_category
== "no tree" & cell == "81")
print(result_cell81)
# Combining the data frames
result_all <- bind_rows(
result_cell79 %>% mutate(cell = "79"),
result_cell80 %>% mutate(cell = "80"),
result_cell81 %>% mutate(cell = "81"))
# counting the number of rows in each data frame
count_cell79 <- nrow(result_cell79)
count_cell80 <- nrow(result_cell80)
count_cell81 <- nrow(result_cell81)
# creating a data frame with the counts
count_data <- data.frame(cell = c("79", "80", "81"), count = c(count_cell79, count_cell80, count_cell81))
# creating a bar chart
ggplot(count_data, aes(x = cell, y = count)) +
geom_bar(stat = "identity", fill = "blue") +
labs(x = "Cell", y = "Count", title = "Number of Observations by Cell") +
theme(plot.title = element_text(hjust = 0.5))
# ----Dataset two------------------------------
#Importing excel file####
dataset2 <- read.csv("tree_2.csv")
# Group the data by height and count the number of buildings in each group
data_grouped <- dataset2 %>% group_by(height)%>% summarise(count = n())
dataset2_summary <- data_grouped %>% summarise(mean_value = mean(height))
# Creating a bar plot with height on x-axis and count on y-axise####
ggplot(data_grouped, aes(x = height, y = count)) +
geom_bar(stat = "identity") +
labs(title = "Number of Buildings by Height", x = "Height", y = "Number of Buildings")
# ----Dataset three------------------------------
#After spending some time learning about this package, I was able to apply it to visualize the data for my research project as dataset three
json_data <- fromJSON("shoebox-weights.json")
json_tibble <- as_tibble(json_data)
json_tibble <- as_tibble(json_data)
write_excel_csv(json_tibble, "output_file.csv")
df <- read.csv("output_file.csv")
df_grouped <- df %>%
group_by(ParentBuildingId)%>%
summarize (count = n())
print(df_grouped) write_csv(df_grouped, "output2_file.csv")
install.packages("sf")
install.packages("tidyverse")
install.packages("dplyr")
json_data <- fromJSON("shoebox-weights.json")
json_tibble <- as_tibble(json_data)
json_tibble <- as_tibble(json_data)
write_excel_csv(json_tibble, "output_file.csv")
df <- read.csv("output_file.csv")
df_grouped <- df %>%
group_by(ParentBuildingId)%>%
summarize (count = n())
print(df_grouped) write_csv(df_grouped, "output2_file.csv")
json_data <- fromJSON("shoebox-weights.json")
json_tibble <- as_tibble(json_data)
json_tibble <- as_tibble(json_data)
write_excel_csv(json_tibble, "output_file.csv")
df <- read.csv("output_file.csv")
df_grouped <- df %>%
group_by(ParentBuildingId)%>%
summarize (count = n())
print(df_grouped) write_csv(df_grouped, "output2_file.csv")
data_grouped <- dataset2 %>% group_by(height)%>% summarise(count = n())
# Creating a bar plot with height on x-axis and count on y-axise####
ggplot(data_grouped, aes(x = height, y = count)) +
geom_bar(stat = "identity") +
labs(title = "Number of Buildings by Height", x = "Height", y = "Number of Buildings")
