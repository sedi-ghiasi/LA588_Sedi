# I dislike having to zoom in all the time so I will set the vie center to
map %>% setView(lng= -92.54, lat=41.24, zoom = 20)
map <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng= -92.547, lat=41.24, popup="where he proposed me")
map %>% setView(lng= -92.54, lat=41.24, zoom = 14)
map  # Print the map
# I dislike having to zoom in all the time so I will set the vie center to
map %>% setView(lng= -92.54, lat=41.24, zoom = 20)
map <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng= -92.9164, lat=41.4080, popup="where he proposed me")
map %>% setView(lng= -92.9164, lat=41.4080, zoom = 14)
map  # Print the map
# I dislike having to zoom in all the time so I will set the vie center to
map %>% setView(lng= -92.9164, lat=41.4080, zoom = 20)
library(leaflet)
library(leaflet.providers)
library(tidyverse)
setwd("~/")
setwd("C:/Users/ghiasi/Documents/GitHub/LA588_Sedi/Assignment4")
# LA588-Assignment4
#
# March 21, 2023
# Sedi
install.packages("leaflet", "leaflet.providers", "tidyverse")
library(leaflet)
library(leaflet.providers)
library(tidyverse)
install.packages("leaflet", "leaflet.providers", "tidyverse")
install.packages("leaflet", "leaflet.providers", "tidyverse")
install.packages("leaflet", "leaflet.providers", "tidyverse")
youthConf100 <- read.csv("IowaShirtSizes100.csv", header = TRUE)
youthConf1000 <- read.csv("IowaShirtSizes1000.csv", header = TRUE)
myData <- youthConf100
map <- leaflet(myData) %>%
addTiles() %>%
addMarkers(~longitude, ~latitude)
install.packages("leaflet", "leaflet.providers", "tidyverse")
library(leaflet)
library(leaflet.providers)
library(tidyverse)
# For the demo I used Mockaroo to make some fake data for a fictional youth
# coding conference, the data set includes latitude, longitude, gender, shirt
# size and favorite color. I forgot the age! see https://www.mockaroo.com/16ccd380
# Set your sessions working directory to match this files source
youthConf100 <- read.csv("IowaShirtSizes100.csv", header = TRUE)
youthConf1000 <- read.csv("IowaShirtSizes1000.csv", header = TRUE)
myData <- youthConf100
# Add markers from the CSV to this map
map <- leaflet(myData) %>%
addTiles() %>%
addMarkers(~longitude, ~latitude)
map
install.packages("leaflet", "leaflet.providers", "tidyverse")
install.packages("leaflet", "leaflet.providers", "tidyverse")
View(myData)
View(youthConf100)
View(youthConf1000)
map <- leaflet(myData) %>%
addTiles() %>%
addCircles(~longitude, ~latitude, label = myData$shirt_color)
youthConf100 <- read.csv("IowaShirtSizes100.csv", header = TRUE)
youthConf1000 <- read.csv("IowaShirtSizes1000.csv", header = TRUE)
myData <- youthConf100
# Add markers from the CSV to this map
map <- leaflet(myData) %>%
addTiles() %>%
addMarkers(~longitude, ~latitude)
map <- leaflet(myData) %>%
addTiles() %>%
addCircles(~longitude, ~latitude, label = myData$shirt_color)
library(leaflet)
library(leaflet.providers)
library(tidyverse)
map <- leaflet(myData) %>%
addTiles() %>%
addMarkers(~longitude, ~latitude)
map
map <- leaflet(myData) %>%
addTiles() %>%
addCircles(~longitude, ~latitude, label = myData$shirt_color)
map
map <- leaflet(myData) %>%
addTiles() %>%
addCircles(~longitude, ~latitude, popup = paste("<strong>",
myData$last_name, "</strong><br>", "Shirt Size: ",
myData$shirt_size))
map
map <- leaflet(myData) %>%
addTiles() %>%
addCircles(~longitude, ~latitude, popup = paste("<strong>",
myData$last_name, "</strong><br>", "Shirt Size: ",
myData$shirt_size))
map
map <- leaflet(myData) %>%
addTiles() %>%
addCircles(~longitude, ~latitude, popup = paste("<strong>",
myData$last_name, "</strong><br>", "Shirt Size: ",
myData$shirt_size))
map
map <- leaflet(myData) %>%
addTiles() %>%
addCircles(~longitude, ~latitude, popup= paste("<strong>",
myData$last_name, "</strong><br>", "Shirt Size: ",
myData$shirt_size), weight = 4, radius=1000,
color="red", stroke = TRUE, fillOpacity = 0.8)
map
# Maybe change the size and color of the circles
# Note for the color you can also use the hex color value
map <- leaflet(myData) %>%
addTiles() %>%
addCircles(~longitude, ~latitude, popup= paste("<strong>",
myData$last_name, "</strong><br>", "Shirt Size: ",
myData$shirt_size), weight = 4, radius=1000,
color="green", stroke = TRUE, fillOpacity = 0.8)
map
map <- leaflet(myData) %>%
addTiles() %>%
addCircles(~longitude, ~latitude, popup= paste("<strong>",
myData$last_name, "</strong><br>", "Shirt Size: ",
myData$shirt_size), weight = 4, radius=60,
color="green", stroke = TRUE, fillOpacity = 0.8)
map
map <- leaflet(myData) %>%
addTiles() %>%
addCircles(~longitude, ~latitude, popup= paste("<strong>",
myData$last_name, "</strong><br>", "Shirt Size: ",
myData$shirt_size), weight = 4, radius=100,
color="green", stroke = TRUE, fillOpacity = 0.8)
map
map <- leaflet(myData) %>%
addTiles() %>%
addCircles(~longitude, ~latitude, popup= paste("<strong>",
myData$last_name, "</strong><br>", "Shirt Size: ",
myData$shirt_size), weight = 4, radius=100,
color="green", stroke = TRUE, fillOpacity = 0.8, fillopacity=0.3)
map <- leaflet(myData) %>%
addTiles() %>%
addCircles(~longitude, ~latitude, popup= paste("<strong>",
myData$last_name, "</strong><br>", "Shirt Size: ",
myData$shirt_size), weight = 12, radius=1000,
color="green", stroke = TRUE, fillOpacity = 0.8)
map
names(providers)
addTiles(group = "OSM", options = providerTileOptions(minZoom = 4, maxZoom = 10)) %>%
addProviderTiles("Stamen.TonerLite", group = "Toner",
options = providerTileOptions(minZoom = 8, maxZoom = 10)) %>%
addProviderTiles("Stamen.Watercolor", group = "Water Color") %>%
addProviderTiles("Esri.WorldTopoMap", group = "Topo") %>%
addProviderTiles("OpenStreetMap.Mapnik", group = "Mapnik") %>%
addProviderTiles("CartoDB.Positron", group = "CartoDB") %>%
addLayersControl(baseGroups = c("OSM", "Toner", "Water Color", "Topo", "Mapnik", "CartoDB"),
options = layersControlOptions(collapsed = TRUE)) %>%
map <- leaflet(myData) %>%
addTiles(group = "OSM", options = providerTileOptions(minZoom = 4, maxZoom = 10)) %>%
addProviderTiles("Stamen.TonerLite", group = "Toner",
options = providerTileOptions(minZoom = 8, maxZoom = 10)) %>%
addProviderTiles("Stamen.Watercolor", group = "Water Color") %>%
addProviderTiles("Esri.WorldTopoMap", group = "Topo") %>%
addProviderTiles("OpenStreetMap.Mapnik", group = "Mapnik") %>%
addProviderTiles("CartoDB.Positron", group = "CartoDB") %>%
addLayersControl(baseGroups = c("OSM", "Toner", "Water Color", "Topo", "Mapnik", "CartoDB"),
options = layersControlOptions(collapsed = TRUE)) %>%
addCircles(~longitude, ~latitude, popup= paste("<strong>",
myData$last_name, "</strong><br>", "Shirt Size: ",
myData$shirt_size), weight = 4, radius=40,
color="red", stroke = TRUE, fillOpacity = 0.8)
names(providers)
# We now have an button containing a group of background layers
map <- leaflet(myData) %>%
addTiles(group = "OSM", options = providerTileOptions(minZoom = 4, maxZoom = 10)) %>%
addProviderTiles("Stamen.TonerLite", group = "Toner",
options = providerTileOptions(minZoom = 8, maxZoom = 10)) %>%
addProviderTiles("Stamen.Watercolor", group = "Water Color") %>%
addProviderTiles("Esri.WorldTopoMap", group = "Topo") %>%
addProviderTiles("OpenStreetMap.Mapnik", group = "Mapnik") %>%
addProviderTiles("CartoDB.Positron", group = "CartoDB") %>%
addLayersControl(baseGroups = c("OSM", "Toner", "Water Color", "Topo", "Mapnik", "CartoDB"),
options = layersControlOptions(collapsed = TRUE)) %>%
addCircles(~longitude, ~latitude, popup= paste("<strong>",
myData$last_name, "</strong><br>", "Shirt Size: ",
myData$shirt_size), weight = 4, radius=40,
color="red", stroke = TRUE, fillOpacity = 0.8)
map
myData <-youthConf1000
map <- leaflet(myData) %>%
addProviderTiles("Stamen.TonerLite",
options = providerTileOptions(minZoom = 4, maxZoom = 10)) %>%
addMarkers(~longitude, ~latitude)
map
map <- leaflet(myData[1:50,]) %>%
addProviderTiles("Stamen.TonerLite",
options = providerTileOptions(minZoom = 4, maxZoom = 10))%>%
addMarkers(~longitude, ~latitude)
map
map <- leaflet(myData[1:50,]) %>%
addProviderTiles("Stamen.TonerLines",
options = providerTileOptions(minZoom = 4, maxZoom = 10))%>%
addMarkers(~longitude, ~latitude)
map
map <- leaflet(myData) %>%
addProviderTiles("Stamen.TonerLite",
options = providerTileOptions(minZoom = 4, maxZoom = 10))%>%
addMarkers(~longitude, ~latitude, clusterOptions = markerClusterOptions())
map
# Make clusters, note this only appears to work with addMarkers
map <- leaflet(myData[1:200,]) %>%
addProviderTiles("Stamen.TonerLite",
options = providerTileOptions(minZoom = 4, maxZoom = 10))%>%
addMarkers(~longitude, ~latitude, clusterOptions = markerClusterOptions())
map
lookup<- read.csv("lookup_county_regions_includesCountyID", header = TRUE)
lookup<- read.csv("lookup_county_regions_includesCountyID.csv", header = TRUE)
myData <- lookup
map <- leaflet(myData) %>%
addTiles() %>%
addMarkers(~longitude, ~latitude)
View(lookup)
lookup<- read.csv("lookup_county_regions_includesCountyID.csv", header = TRUE)
myData <- lookup
# Add markers from the CSV to this map
map <- leaflet(myData) %>%
addTiles() %>%
addMarkers(~longitude, ~latitude)
lookup<- read.csv("lookup_county_regions_includesCountyID.csv", header = TRUE)
myData <- lookup
longitude= 41.8789
latitude= -93.0977
# Add markers from the CSV to this map
map <- leaflet(myData) %>%
addTiles() %>%
addMarkers(~longitude, ~latitude)
map
lookup<- read.csv("IowaStudentsDiversity.csv", header = TRUE)
myData <- lookup
# Add markers from the CSV to this map
map <- leaflet(myData) %>%
addTiles() %>%
addMarkers(~longitude, ~latitude)
map
map <- leaflet(myData) %>%
addTiles() %>%
addCircles(~longitude, ~latitude, label = myData$country)
map
map <- leaflet(myData) %>%
addTiles() %>%
addCircles(~longitude, ~latitude, popup = paste("<strong>",
myData$last_name, "</strong><br>", "country: ",
myData$country))
map
map <- leaflet(myData) %>%
addTiles() %>%
addCircles(~longitude, ~latitude, popup= paste("<strong>",
myData$last_name, "</strong><br>", "Shirt Size: ",
myData$country), weight = 12, radius=1000,
color="green", stroke = TRUE, fillOpacity = 0.8)
map
map <- leaflet(myData) %>%
addTiles() %>%
addCircles(~longitude, ~latitude, popup= paste("<strong>",
myData$last_name, "</strong><br>", "country: ",
myData$country), weight = 12, radius=1000,
color="green", stroke = TRUE, fillOpacity = 0.8)
map
map <- leaflet(myData) %>%
addTiles(group = "OSM", options = providerTileOptions(minZoom = 4, maxZoom = 10)) %>%
addProviderTiles("Stamen.TonerLite", group = "Toner",
options = providerTileOptions(minZoom = 8, maxZoom = 10)) %>%
addProviderTiles("Stamen.Watercolor", group = "Water Color") %>%
addProviderTiles("Esri.WorldTopoMap", group = "Topo") %>%
addProviderTiles("OpenStreetMap.Mapnik", group = "Mapnik") %>%
addProviderTiles("CartoDB.Positron", group = "CartoDB") %>%
addLayersControl(baseGroups = c("OSM", "Toner", "Water Color", "Topo", "Mapnik", "CartoDB"),
options = layersControlOptions(collapsed = TRUE)) %>%
addCircles(~longitude, ~latitude, popup= paste("<strong>",
myData$last_name, "</strong><br>", "Shirt Size: ",
myData$shirt_size), weight = 4, radius=40,
color="red", stroke = TRUE, fillOpacity = 0.8)
map
map <- leaflet(myData) %>%
addTiles() %>%
greenLeafIcon <- makeIcon(
iconUrl = "https://leafletjs.com/examples/custom-icons/leaf-green.png",
iconWidth = 38, iconHeight = 95,
iconAnchorX = 22, iconAnchorY = 94,
shadowUrl = "https://leafletjs.com/examples/custom-icons/leaf-shadow.png",
shadowWidth = 50, shadowHeight = 64,
shadowAnchorX = 4, shadowAnchorY = 62
)
greenLeafIcon <- makeIcon(
iconUrl = "https://leafletjs.com/examples/custom-icons/leaf-green.png",
iconWidth = 38, iconHeight = 95,
iconAnchorX = 22, iconAnchorY = 94,
shadowUrl = "https://leafletjs.com/examples/custom-icons/leaf-shadow.png",
shadowWidth = 50, shadowHeight = 64,
shadowAnchorX = 4, shadowAnchorY = 62
)
map <- leaflet(myData) %>%
addTiles() %>%
addMarkers(~longitude, ~latitude)
map
map <- leaflet(myData) %>%
addTiles() %>%
addMarkers(~longitude, ~latitude,icon = greenLeafIcon)
map
greenLeafIcon <- makeIcon(
iconUrl = "https://leafletjs.com/examples/custom-icons/leaf-green.png",
iconWidth = 20, iconHeight = 65,
iconAnchorX = 22, iconAnchorY = 94,
shadowUrl = "https://leafletjs.com/examples/custom-icons/leaf-shadow.png",
shadowWidth = 50, shadowHeight = 64,
shadowAnchorX = 4, shadowAnchorY = 62
)
map <- leaflet(myData) %>%
addTiles() %>%
addMarkers(~longitude, ~latitude,icon = greenLeafIcon)
map
greenLeafIcon <- makeIcon(
iconUrl = "https://leafletjs.com/examples/custom-icons/leaf-green.png",
iconWidth = 10, iconHeight = 35,
iconAnchorX = 22, iconAnchorY = 94,
shadowUrl = "https://leafletjs.com/examples/custom-icons/leaf-shadow.png",
shadowWidth = 50, shadowHeight = 64,
shadowAnchorX = 4, shadowAnchorY = 62
)
# Add markers from the CSV to this map
map <- leaflet(myData) %>%
addTiles() %>%
addMarkers(~longitude, ~latitude,icon = greenLeafIcon)
map
map <- leaflet(myData) %>%
addTiles() %>%
addCircles(~longitude, ~latitude, label = myData$country)
map
map <- leaflet(myData) %>%
addTiles() %>%
addCircles(~longitude, ~latitude, popup = paste("<strong>",
myData$last_name, "</strong><br>", "country: ",
myData$country))
map
map <- leaflet(myData) %>%
addTiles() %>%
addCircles(~longitude, ~latitude, popup= paste("<strong>",
myData$last_name, "</strong><br>", "country: ",
myData$country), weight = 12, radius=1000,
color="green", stroke = TRUE, fillOpacity = 0.8)
map
names(providers)
map <- leaflet(myData) %>%
addTiles(group = "OSM", options = providerTileOptions(minZoom = 4, maxZoom = 10)) %>%
addProviderTiles("Stamen.TonerLite", group = "Toner",
options = providerTileOptions(minZoom = 8, maxZoom = 10)) %>%
addProviderTiles("Thunderforest", group = "Water Color") %>%
addProviderTiles("TomTom", group = "Topo") %>%
addProviderTiles("OpenPtMap", group = "Mapnik") %>%
addProviderTiles("HERE.normalDayTraffic", group = "CartoDB") %>%
addLayersControl(baseGroups = c("OSM", "Toner", "Water Color", "Topo", "Mapnik", "CartoDB"),
options = layersControlOptions(collapsed = TRUE)) %>%
addCircles(~longitude, ~latitude, popup= paste("<strong>",
myData$last_name, "</strong><br>", "Shirt Size: ",
myData$country), weight = 4, radius=40,
color="red", stroke = TRUE, fillOpacity = 0.8)
map
myData <-youthConf1000
map <- leaflet(myData[1:50,]) %>%
addProviderTiles("Stamen.TonerLines",
options = providerTileOptions(minZoom = 4, maxZoom = 10))%>%
addMarkers(~longitude, ~latitude)
map
map <- leaflet(myData[1:50,]) %>%
addProviderTiles("OpenPtMap",
options = providerTileOptions(minZoom = 4, maxZoom = 10))%>%
addMarkers(~longitude, ~latitude)
map
map <- leaflet(myData[1:50,]) %>%
addProviderTiles("TomTom",
options = providerTileOptions(minZoom = 4, maxZoom = 10))%>%
addMarkers(~longitude, ~latitude)
map
map <- leaflet(myData[1:50,]) %>%
addProviderTiles("TomTom",
options = providerTileOptions(minZoom = 4, maxZoom = 10))%>%
addMarkers(~longitude, ~latitude)
map
map <- leaflet(myData[1:50,]) %>%
addProviderTiles("Stamen.TonerLite",
options = providerTileOptions(minZoom = 4, maxZoom = 10))%>%
addMarkers(~longitude, ~latitude, clusterOptions = markerClusterOptions())
map
map <- leaflet(myData) %>%
addProviderTiles("Stamen.TonerLite",
options = providerTileOptions(minZoom = 4, maxZoom = 10))%>%
addMarkers(~longitude, ~latitude, clusterOptions = markerClusterOptions())
map
map <- leaflet(myData) %>%
addProviderTiles("Stamen.TonerLite",
options = providerTileOptions(minZoom = 6, maxZoom = 20))%>%
addMarkers(~longitude, ~latitude, clusterOptions = markerClusterOptions())
map
library(sf)
studentCount <- st_read("iowaplaces.shp")
studentCount <- st_read("iowaplaces.shp")
install.packages("sf")
install.packages("sf")
library(tidyverse)
library(readxl)
library(sf)
studentCount <- st_read("iowaplaces.shp")
View(studentCount)
install.packages("leaflet", "leaflet.providers", "tidyverse")
install.packages("sf")
library(leaflet)
library(leaflet.providers)
library(tidyverse)
library(readxl)
library(sf)
install.packages("leaflet", "leaflet.providers", "tidyverse")
install.packages("sf")
county_pop_places <- st_read("iowaplaces.shp")
county_pop_places <- st_read("iowaplaces.shp")
county_pop_places <- st_read("iowaplaces.shp")
View(county_pop_places)
# Set the projection to use lat and longs
county_pop_places <- st_transform(county_pop_places, crs = 4326)
View(county_pop_places)
m <- leaflet() %>%
setView(-94.5, 42.2, 6)  %>%
addTiles() %>%
addPolygons(data = county_pop_places,  # borders of all counties
color = "blue", fill = NA, weight = 1)
View(county_pop_places)
View(county_pop_places)
m <- leaflet() %>%
setView(-94.5, 42.2, 6)  %>%
addTiles() %>%
addPolygons(data = county_pop_places,  # borders of all counties
color = "blue", fill = NA, weight = 1)
View(county_pop_places)
m <- leaflet() %>%
setView(-96.7, 40.2, 6)  %>%
addTiles() %>%
addPolygons(data = county_pop_places,  # borders of all counties
color = "blue", fill = NA, weight = 1)
View(county_pop_places)
m <- leaflet() %>%
setView(-96.7, 40.2, 6)  %>%
addTiles() %>%
addPolygons(data = county_pop_places,  # borders of all counties
color = "blue", fill = NA, weight = 1)
coords_sf <- st_as_sf(coords, coords = c("x", "y"), crs = 4326, agr = "constant",
sf_column_name = "geometry")
county_pop_places <- st_transform(county_pop_places, crs = 4326)
m <- leaflet() %>%
setView(-96.7, 40.2, 6)  %>%
addTiles() %>%
addPolygons(data = county_pop_places,  # borders of all counties
color = "blue", fill = NA, weight = 1)
county_pop_places <- st_read("iowapop.shp")
county_pop_places <- st_read("iowapop.shp")
# Set the projection to use lat and longs
county_pop_places <- st_transform(county_pop_places, crs = 4326)
m <- leaflet() %>%
setView(-96.7, 40.2, 6)  %>%
addTiles() %>%
addPolygons(data = county_pop_places,  # borders of all counties
color = "blue", fill = NA, weight = 1)
View(county_pop_places)
county_pop_places <- st_transform(county_pop_places, crs = 4326)
county_pop_places <- st_read("iowapop.shp")
View(county_pop_places)
county_pop_places <- st_read("iowa.shp")
# Set the projection to use lat and longs
county_pop_places <- st_transform(county_pop_places, crs = 4326)
View(county_pop_places)
county_pop_places <- st_read("iowa.shp")
# Set the projection to use lat and longs
county_pop_places <- st_transform(county_pop_places, crs = 4326)
m <- leaflet() %>%
setView(-96.7, 40.2, 6)  %>%
addTiles() %>%
addPolygons(data = county_pop_places,  # borders of all counties
color = "blue", fill = NA, weight = 1)
county_pop_places <- st_read("iowa.shp")
View(county_pop_places)
library(dplyr)
View(county_pop_places)
county_pop_places <- st_read("iowa.shp")
shapefile_new <- shapefile %>%
select(Geometer)
county_pop_places <- st_read("iowa.shp")
shapefile_new <- county_pop_places %>%
select(Geometer)
county_pop_places <- st_read("iowa.shp")
shapefile_new <- county_pop_places %>%
select(Geometery)
View(county_pop_places)
county_pop_places <- st_read("iowa.shp")
shapefile_new <- county_pop_places %>%
select(geometery)
county_pop_places <- st_read("iowa.shp")
shapefile_new <- county_pop_places %>%
select(geometry)
st_write(shapefile_new, "new_shapefile.shp")
county_pop_places <- st_transform(county_pop_places, crs = 4326)
m <- leaflet() %>%
setView(-96.7, 40.2, 6)  %>%
addTiles() %>%
addPolygons(data = county_pop_places,  # borders of all counties
color = "blue", fill = NA, weight = 1)
View(shapefile_new)
View(shapefile_new)
